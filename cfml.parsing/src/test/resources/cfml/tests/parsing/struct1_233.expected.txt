/*===TOKENS===*/
PUBLIC                   <public>
STRUCT                   <struct>
FUNCTION                 <function>
IDENTIFIER               <onLoad>
'('                      <(>
')'                      <)>
OUTPUT                   <output>
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <false>
CLOSE_STRING             <">
'{'                      <{>
IDENTIFIER               <local>
'.'                      <.>
IDENTIFIER               <a>
'='                      <=>
'{'                      <{>
OPEN_STRING              <">
STRING_LITERAL           <a>
CLOSE_STRING             <">
':'                      <:>
INTEGER_LITERAL          <0>
LT                       <<>
INTEGER_LITERAL          <1>
'}'                      <}>
';'                      <;>
RETURN                   <return>
IDENTIFIER               <local>
'.'                      <.>
IDENTIFIER               <a>
';'                      <;>
'}'                      <}>
/*===TREE===*/
(scriptBlock
  (element
    (functionDeclaration
      (accessType public)
      (typeSpec (type struct))
      function
      (identifier onLoad)
      (
      parameterList
      )
      (functionAttribute
        (identifier (cfmlFunction output))
        =
        (constantExpression (stringLiteral " (stringLiteralPart false) "))
      )
      (compoundStatement
        {
        (statement
          (assignmentExpression
            (startExpression
              (compareExpression
                (baseExpression
                  (unaryExpression (memberExpression (identifier local) . (identifier a)))
                )
              )
            )
            =
            (startExpression
              (compareExpression
                (baseExpression
                  (unaryExpression
                    (primaryExpression
                      (implicitStruct
                        {
                        (implicitStructElements
                          (implicitStructExpression
                            (implicitStructKeyExpression
                              (literalExpression (stringLiteral " (stringLiteralPart a) "))
                            )
                            :
                            (compareExpression
                              (baseExpression (unaryExpression (primaryExpression (literalExpression 0))))
                              (compareExpressionOperator <)
                              (compareExpression
                                (baseExpression (unaryExpression (primaryExpression (literalExpression 1))))
                              )
                            )
                          )
                        )
                        }
                      )
                    )
                  )
                )
              )
            )
          )
          ;
        )
        (statement
          (returnStatement
            return
            (startExpression
              (compareExpression
                (baseExpression
                  (unaryExpression (memberExpression (identifier local) . (identifier a)))
                )
              )
            )
            ;
          )
        )
        }
      )
    )
  )
)
/*======*/
/*===DECOMPILE===*/
public struct function onLoad() output='false'  {
local.a = {'a':0 < 1};
    return local.a;

  }
/*======*/