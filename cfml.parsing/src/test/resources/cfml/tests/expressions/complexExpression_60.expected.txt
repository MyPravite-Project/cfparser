/*===TOKENS===*/
COMPONENT                <component>
'{'                      <{>
Hidden:NEWLINE                  <>
FUNCTION                 <function>
IDENTIFIER               <name>
'('                      <(>
')'                      <)>
'{'                      <{>
Hidden:NEWLINE                  <>
VAR                      <var>
IDENTIFIER               <params>
'='                      <=>
'{'                      <{>
Hidden:NEWLINE                  <>
IDENTIFIER               <thingId>
'='                      <=>
'{'                      <{>
OPEN_STRING              <">
STRING_LITERAL           <value>
CLOSE_STRING             <">
'='                      <=>
IDENTIFIER               <thing>
'.'                      <.>
IDENTIFIER               <getID>
'('                      <(>
')'                      <)>
','                      <,>
OPEN_STRING              <">
STRING_LITERAL           <cfsqltype>
CLOSE_STRING             <">
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <CF_SQL_INTEGER>
CLOSE_STRING             <">
'}'                      <}>
','                      <,>
Hidden:NEWLINE                  <>
IDENTIFIER               <name>
'='                      <=>
'{'                      <{>
OPEN_STRING              <">
STRING_LITERAL           <value>
CLOSE_STRING             <">
'='                      <=>
IDENTIFIER               <thing>
'.'                      <.>
IDENTIFIER               <getName>
'('                      <(>
')'                      <)>
','                      <,>
OPEN_STRING              <">
STRING_LITERAL           <cfsqltype>
CLOSE_STRING             <">
'='                      <=>
OPEN_STRING              <">
STRING_LITERAL           <CF_SQL_VARCHAR>
CLOSE_STRING             <">
','                      <,>
IDENTIFIER               <null>
'='                      <=>
'!'                      <!>
IDENTIFIER               <len>
'('                      <(>
IDENTIFIER               <thing>
'.'                      <.>
IDENTIFIER               <getName>
'('                      <(>
')'                      <)>
')'                      <)>
'}'                      <}>
Hidden:NEWLINE                  <>
'}'                      <}>
';'                      <;>
Hidden:NEWLINE                  <>
'}'                      <}>
Hidden:NEWLINE                  <>
'}'                      <}>
/*===TREE===*/
(scriptBlock
  (componentDeclaration
    component
    (componentGuts
      {
      (element
        (functionDeclaration
          function
          (identifier name)
          (
          parameterList
          )
          (compoundStatement
            {
            (statement
              (localAssignmentExpression
                var
                (startExpression
                  (compareExpression
                    (baseExpression (unaryExpression (memberExpression (identifier params))))
                  )
                )
                =
                (startExpression
                  (compareExpression
                    (baseExpression
                      (unaryExpression
                        (primaryExpression
                          (implicitStruct
                            {
                            (implicitStructElements
                              (implicitStructExpression
                                (implicitStructKeyExpression (multipartIdentifier (identifier thingId)))
                                =
                                (compareExpression
                                  (baseExpression
                                    (unaryExpression
                                      (primaryExpression
                                        (implicitStruct
                                          {
                                          (implicitStructElements
                                            (implicitStructExpression
                                              (implicitStructKeyExpression
                                                (literalExpression (stringLiteral " (stringLiteralPart value) "))
                                              )
                                              =
                                              (compareExpression
                                                (baseExpression
                                                  (unaryExpression
                                                    (memberExpression
                                                      (identifier thing)
                                                      .
                                                      (qualifiedFunctionCall (identifier getID) ( argumentList ))
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            ,
                                            (implicitStructExpression
                                              (implicitStructKeyExpression
                                                (literalExpression (stringLiteral " (stringLiteralPart cfsqltype) "))
                                              )
                                              =
                                              (compareExpression
                                                (baseExpression
                                                  (unaryExpression
                                                    (primaryExpression
                                                      (literalExpression (stringLiteral " (stringLiteralPart CF_SQL_INTEGER) "))
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                          }
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                              ,
                              (implicitStructExpression
                                (implicitStructKeyExpression (multipartIdentifier (identifier name)))
                                =
                                (compareExpression
                                  (baseExpression
                                    (unaryExpression
                                      (primaryExpression
                                        (implicitStruct
                                          {
                                          (implicitStructElements
                                            (implicitStructExpression
                                              (implicitStructKeyExpression
                                                (literalExpression (stringLiteral " (stringLiteralPart value) "))
                                              )
                                              =
                                              (compareExpression
                                                (baseExpression
                                                  (unaryExpression
                                                    (memberExpression
                                                      (identifier thing)
                                                      .
                                                      (qualifiedFunctionCall (identifier getName) ( argumentList ))
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            ,
                                            (implicitStructExpression
                                              (implicitStructKeyExpression
                                                (literalExpression (stringLiteral " (stringLiteralPart cfsqltype) "))
                                              )
                                              =
                                              (compareExpression
                                                (baseExpression
                                                  (unaryExpression
                                                    (primaryExpression
                                                      (literalExpression (stringLiteral " (stringLiteralPart CF_SQL_VARCHAR) "))
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                            ,
                                            (implicitStructExpression
                                              (implicitStructKeyExpression (multipartIdentifier (identifier null)))
                                              =
                                              (compareExpression
                                                (baseExpression
                                                  (notExpression
                                                    !
                                                    (startExpression
                                                      (compareExpression
                                                        (baseExpression
                                                          (unaryExpression
                                                            (memberExpression
                                                              (functionCall
                                                                (identifier len)
                                                                (
                                                                (argumentList
                                                                  (argument
                                                                    (startExpression
                                                                      (compareExpression
                                                                        (baseExpression
                                                                          (unaryExpression
                                                                            (memberExpression
                                                                              (identifier thing)
                                                                              .
                                                                              (qualifiedFunctionCall (identifier getName) ( argumentList ))
                                                                            )
                                                                          )
                                                                        )
                                                                      )
                                                                    )
                                                                  )
                                                                )
                                                                )
                                                              )
                                                            )
                                                          )
                                                        )
                                                      )
                                                    )
                                                  )
                                                )
                                              )
                                            )
                                          )
                                          }
                                        )
                                      )
                                    )
                                  )
                                )
                              )
                            )
                            }
                          )
                        )
                      )
                    )
                  )
                )
              )
              (endOfStatement ;)
            )
            }
          )
        )
      )
      }
    )
  )
)
/*======*/
/*===DECOMPILE===*/
component {
  public function name()     {
      var params = {thingId:{'value':thing.getID(),'cfsqltype':'CF_SQL_INTEGER'},name:{'value':thing.getName(),'cfsqltype':'CF_SQL_VARCHAR',null:!len(thing.getName())}};

    }
}
/*======*/